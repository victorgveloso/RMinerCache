name: ASTDiff Bot

on:
  issue_comment:
    types: [created]
permissions: write-all
jobs:
  diff:
    runs-on: ubuntu-latest
    permissions:
      issues: write

    steps:
      # Step 0: Check for @diff trigger and get the URL command
      - name: Check for @diff trigger
        id: trigger
        uses: actions/github-script@v6
        with:
          script: |
            const commentBody = context.payload.comment.body;
            const url_regex = /@diff\s+(\S+)/;  // Match the next non-whitespace string after @diff
            const owner_name_regex = /[^g]*github.com[:/]([^/]*)\/([^/#]*)/; // Match the owner and name of the repository
            const url_match = commentBody.match(url_regex);
            if (url_match) {
              const url = url_match[1].trim();
              core.setOutput('triggered', 'true');
              core.setOutput('url', url); 
              const repo_match = url.match(owner_name_regex);
              if (repo_match) {
                core.setOutput('repo_match', 'true');
                core.setOutput('owner', repo_match[1].trim()); 
                core.setOutput('name', repo_match[2].trim());
              } else {
                core.setOutput('repo_match', 'false');
              }
            } else {
              core.setOutput('triggered', 'false');
            }

      - name: Pull RefactoringMiner Docker image
        run: docker pull tsantalis/refactoringminer:latest
        shell: bash

      - name: Run RefactoringMiner to generate diff
        run: |
          mkdir -p ${{ github.workspace }}/exportedFromDocker
          docker run \
            --env OAuthToken="${{ secrets.OAUTHTOKEN }}" \
            -v ${{ github.workspace }}/exportedFromDocker:/diff/exported \
            --entrypoint "" \
            tsantalis/refactoringminer:latest /bin/sh -c "\
              refactoringminer diff --url \"${{ steps.trigger.outputs.url }}\" -e && \
              unzip /opt/refactoringminer/lib/RefactoringMiner-DockerBuild.jar -d /tmp/refactoringminer &&
              mkdir -p /diff/exported/web && \
              cp -r /tmp/refactoringminer/web /diff/exported/web/resources"
        shell: bash

      - name: Create zip artifact of diff results
        run: |
          cd ${{ github.workspace }}/exportedFromDocker
          zip -r diff_results.zip .
        shell: bash

      - name: Upload diff results as artifact
        id: upload_artifact
        uses: actions/upload-artifact@v4
        with:
          name: diff_results
          path: ${{ github.workspace }}/exportedFromDocker/diff_results.zip

      - name: Set artifact URL output
        run: echo "artifact_url=${{ steps.upload_artifact.outputs.artifact-url }}" >> $GITHUB_ENV
        shell: bash

      - name: Set artifact URL output
        run: echo "::set-output name=artifact_url::${{ steps.upload_artifact.outputs.artifact-url }}"
        shell: bash

      - name: Checkout cached (gh-pages) branch into subdirectory
        if: ${{ steps.trigger.outputs.repo_match == 'true' }}
        uses: actions/checkout@v4 # Clone cache branch
        with:
          # repository: 'tsantalis/RefactoringMiner' # Optional. Default is the current repository
          ref: gh-pages # The cache branch to checkout
          path: cache   # The target directory to checkout to

      - name: Fetch the generated artifact and update the cache branch
        if: ${{ steps.trigger.outputs.repo_match == 'true' }}
        env:
            GITHUB_TOKEN: ${{ secrets.OAUTHTOKEN }}
        run: |
          mkdir -p cache/${{ steps.run_rm_exporter.outputs.owner }}/${{ steps.run_rm_exporter.outputs.name }}/
          cp ${{ github.workspace }}/exportedFromDocker/diff_results.zip cache/${{ steps.run_rm_exporter.outputs.owner }}/${{ steps.run_rm_exporter.outputs.name }}/diff_results.zip
          cd cache/${{ steps.run_rm_exporter.outputs.owner }}/${{ steps.run_rm_exporter.outputs.name }}/
          unzip diff_results.zip
          rm diff_results.zip
          git config user.name "Victor Guerra Veloso"
          git config user.email "victorgvbh@gmail.com"
          git add .
          git commit -m "Github actions updated anime season data"
          git push origin gh-pages --set-upstream --force

      - name: Reply
        if: ${{ steps.trigger.outputs.triggered == 'true' }}
        uses: actions/github-script@v7
        with:
          script: |
            const url = '${{ steps.trigger.outputs.url }}';
            const artifact_url = '${{ steps.run_rm_exporter.outputs.artifact_url }}'; // Add artifact_url output
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `ðŸ‘‹ You triggered the bot with the URL: \`${url}\`. You can download it here: [Download Artifact](${artifact_url}).`
            })